"use strict";(self.webpackChunkcosmos_sdk_docs=self.webpackChunkcosmos_sdk_docs||[]).push([[34860],{3905:(e,t,s)=>{s.d(t,{Zo:()=>p,kt:()=>k});var n=s(67294);function a(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function r(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}function o(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?r(Object(s),!0).forEach((function(t){a(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):r(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function l(e,t){if(null==e)return{};var s,n,a=function(e,t){if(null==e)return{};var s,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)s=r[n],t.indexOf(s)>=0||(a[s]=e[s]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)s=r[n],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(a[s]=e[s])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),s=t;return e&&(s="function"==typeof e?e(t):o(o({},t),e)),s},p=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var s=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(s),d=a,k=m["".concat(i,".").concat(d)]||m[d]||c[d]||r;return s?n.createElement(k,o(o({ref:t},p),{},{components:s})):n.createElement(k,o({ref:t},p))}));function k(e,t){var s=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=s.length,o=new Array(r);o[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<r;u++)o[u]=s[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,s)}d.displayName="MDXCreateElement"},91767:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var n=s(87462),a=(s(67294),s(3905));const r={sidebar_position:1},o="x/consensus",l={unversionedId:"build/modules/consensus/README",id:"build/modules/consensus/README",title:"x/consensus",description:"Abstract",source:"@site/docs/build/modules/consensus/README.md",sourceDirName:"build/modules/consensus",slug:"/build/modules/consensus/",permalink:"/main/build/modules/consensus/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"buildSidebar",previous:{title:"x/bank",permalink:"/main/build/modules/bank/"},next:{title:"x/counter",permalink:"/main/build/modules/counter/"}},i={},u=[{value:"Abstract",id:"abstract",level:2},{value:"Contents",id:"contents",level:2},{value:"State",id:"state",level:2},{value:"Params",id:"params",level:2},{value:"Keepers",id:"keepers",level:2},{value:"Messages",id:"messages",level:2},{value:"UpdateParams",id:"updateparams",level:3},{value:"Consensus Messages",id:"consensus-messages",level:2},{value:"Events",id:"events",level:2},{value:"Message Events",id:"message-events",level:3},{value:"MsgUpdateParams",id:"msgupdateparams",level:4}],p={toc:u},m="wrapper";function c(e){let{components:t,...s}=e;return(0,a.kt)(m,(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"xconsensus"},(0,a.kt)("inlineCode",{parentName:"h1"},"x/consensus")),(0,a.kt)("h2",{id:"abstract"},"Abstract"),(0,a.kt)("p",null,"Functionality to modify CometBFT's ABCI consensus params."),(0,a.kt)("h2",{id:"contents"},"Contents"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#state"},"State")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#params"},"Params")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#keepers"},"Keepers")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#messages"},"Messages")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#consensus-messages"},"Consensus Messages")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#events"},"Events"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#message-events"},"Message Events"))))),(0,a.kt)("h2",{id:"state"},"State"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"x/consensus")," module keeps state of the consensus params from cometbft.:"),(0,a.kt)("h2",{id:"params"},"Params"),(0,a.kt)("p",null,"The consensus module stores it's params in state with the prefix of ",(0,a.kt)("inlineCode",{parentName:"p"},"0x05"),",\nit can be updated with governance or the address with authority."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Params: ",(0,a.kt)("inlineCode",{parentName:"li"},"0x05 | ProtocolBuffer(cometbft.ConsensusParams)"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/381de6452693a9338371223c232fba0c42773a4b/proto/cosmos/consensus/v1/consensus.proto#L11-L18\n")),(0,a.kt)("h2",{id:"keepers"},"Keepers"),(0,a.kt)("p",null,"The consensus module provides methods to Set and Get consensus params. It is recommended to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"x/consensus")," module keeper to get consensus params instead of accessing them through the context."),(0,a.kt)("h2",{id:"messages"},"Messages"),(0,a.kt)("h3",{id:"updateparams"},"UpdateParams"),(0,a.kt)("p",null,"Update consensus params."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/381de6452693a9338371223c232fba0c42773a4b/proto/cosmos/consensus/v1/tx.proto#L12-L47\n")),(0,a.kt)("p",null,"The message will fail under the following conditions:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The signer is not the set authority "),(0,a.kt)("li",{parentName:"ul"},"Not all values are set")),(0,a.kt)("h2",{id:"consensus-messages"},"Consensus Messages"),(0,a.kt)("p",null,"The consensus module has a consensus message that is used to set the consensus params when the chain initializes. It is similar to the ",(0,a.kt)("inlineCode",{parentName:"p"},"UpdateParams")," message but it is only used once at the start of the chain."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/381de6452693a9338371223c232fba0c42773a4b/proto/cosmos/consensus/v1/consensus.proto#L9-L24\n")),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)("p",null,"The consensus module emits the following events:"),(0,a.kt)("h3",{id:"message-events"},"Message Events"),(0,a.kt)("h4",{id:"msgupdateparams"},"MsgUpdateParams"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"authority"),(0,a.kt)("td",{parentName:"tr",align:null},"msg.Signer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"parameters"),(0,a.kt)("td",{parentName:"tr",align:null},"consensus Parameters")))))}c.isMDXComponent=!0}}]);